#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('chaos_book/hw1Rossler'),
                        'excludes': [u'README.md'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('strogatz'),
                        'excludes': [u'exercises_8.synctex.gz',
                                     u'6-3-10.png',
                                     u'exercises_8.pdf',
                                     u'exercises_8.blg',
                                     u'exercises_8.bbl',
                                     u'exercises_8.log',
                                     u'exercises_8.tex',
                                     u'README.md',
                                     u'exercises_8.aux'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True},
                       {'dirloc': loc('simulation'),
                        'excludes': [u'spheres.py'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('chaos_book/hw2/Bakers map.py'),
                  loc('chaos_book/hw2/floquet.py'),
                  loc('duffing.py'),
                  loc('henon.py'),
                  loc('lorenz.py'),
                  loc('phase.py'),
                  loc('README.md'),
                  loc('rk4.py'),
                  loc('rki.py'),
                  loc('roessler.py'),
                  loc('strogatz/exercise_6_4_4.py'),
                  loc('utilities.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('henon.py'): ('project',
        (u'--xmin 0.0 --xmax 0.5 --ymin 0.2 --ymax 0.3',
         '')),
                      loc('simulation/mol_dynamics.py'): ('project',
        (u'--plots temp',
         ''))}
[user attributes]
debug.recent-run-args = {loc('henon.py'): [u'--xmin 0.0 --xmax 0.5 --ymin 0.2 --ymax 0.3',
        u'--xmin 0.0 --x_max 0.5 --y_min 0.2 --y_max 0.3',
        u'-N 10000',
        u'-N 1000000'],
                         loc('simulation/mol_dynamics.py'): [u'--plots temp',
        u'--show',
        u'--show -T 25',
        u'--show -T 20',
        u'--help --show',
        u'--N 250 --NT 1000',
        u'--N 100 --NT 1000',
        u'--N 100',
        u'--N 50',
        u'-T 10000 -N 50',
        u'-T 1000'],
                         loc('simulation/spheres.py'): [u'--N 1 --seed 1',
        u'--N 1',
        u'--help',
        u'--R 0.125 --N 40 --NT 1000',
        u'--R 0.125 --N 50 --NT 1000',
        u'--R 0.125 --N 100 --NT 1000',
        u'--R 0.125 --N 100 -NT 1000',
        u'--R 0.125 --N 100',
        u'--R 0.125',
        u'--R .25',
        u'--R .125',
        u'--L 1 22 3',
        u'--L 1 -22 3',
        u'--L 1 2 3',
        u'--L 2',
        u'L=2',
        u'--L 5',
        u'--L 1 2 3 4',
        u'--L 1',
        u'--T 1000']}
debug.show-args-dialog = {loc('barnes_hut.py'): False,
                          loc('duffing.py'): False,
                          loc('lbmFlowAroundCylinder.py'): False,
                          loc('lorentz.py'): False,
                          loc('lorenz.py'): False,
                          loc('parityRule.py'): False,
                          loc('parityRuleSolution.py'): False,
                          loc('rk4.py'): False,
                          loc('rki.py'): False,
                          loc('roessler.py'): False,
                          loc('test.py'): False,
                          loc('unknown:<untitled> #1'): False}
edit.file-encoding = {loc('README.md'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqE'\
        'mVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(1,),
        (2,),
        (3,),
        (5,)],
                                 'selected-nodes': [(1,
        6)],
                                 'top-node': (1,
        0)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../astro/make_img.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../astro/make_img.py'),
                      'config_path')]},
        loc('../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../astro/plot_points.py'),
                      'i')]},
        loc('../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('bacteria.py'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('bacteria.py'),
        'Bacteria')]},
        loc('barnes_hut.py'): {'expanded-nodes': [],
                               'selected-nodes': [[('function def',
        loc('barnes_hut.py'),
        'add')]],
                               'top-node': [('function def',
        loc('barnes_hut.py'),
        'add')]},
        loc('chaos_book/hw1Rossler/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('lv.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('parityRule.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('parityRule.py'),
        'i')]},
        loc('strogatz/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('strogatz_6_1.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('generic attribute',
        loc('strogatz_6_1.py'),
        'eps')]},
        loc('strogatz_6_5_19.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('trafficLights.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('trafficLights.py'),
        'CAR')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.29875986471251414,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'phase',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'D',
                                       'fReverse': False,
                                       'fSearchText': u'rho',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['import enum\n',
        'class Wall(enum.Enum):\n    NORTH  = 1\n    EAST   = 2\n    SOUTH  '\
        '= -1\n    WEST   = -2\n    TOP    = 3\n    BOTTOM = -3\n\n',
        'Wall SOUTH\n',
        'Wall.SOUTH\n',
        'repr(Wall.SOUTH)\n',
        'Wall.SOUTH.name\n',
        'Wall.SOUTH.value\n',
        'Wall.NORTH.value\n',
        'from enum import Enum, unique\n',
        'class Wall(Enum):\n    NORTH  = 1\n    EAST   = 2\n    SOUTH  = -1'\
        '\n    WEST   = -2\n    TOP    = 3\n    BOTTOM = -3\n    def wall(se'\
        'lf):\n        return abs(self._value_)-1\n',
        'Wall.NORTH.wall()\n',
        'Wall.EAST.wall()\n',
        'Wall.TOP.wall()\n',
        'Wall.BOTTOM.wall()\n',
        'def non_trivial(list):\n        return [l for l in list if L!=None]'\
        '\n',
        'def non_trivial(list):\n      return [l for l in list if l!=None]\n',
        'non_trivial([1,2,None,3])\n',
        'non_trivial([None,None,None])\n',
        'sum (i for in in range(3))\n',
        'sum (i for i in range(3))\n',
        'sum (i for i in range(4))\n']},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 145L,
                       'selection_end': 145L,
                       'selection_start': 145L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('simulation/mol_dynamics.py'),
        {'attrib-starts': [('create_configuration|0|',
                            260)],
         'code-line': "    raise MolecularDynamicsError(f'Failed to create v"\
                      "alid configuration for R={R}, density={get_rho(N,R,L)"\
                      "}, within {NT} attempts')\r\n",
         'first-line': 280L,
         'folded-linenos': [],
         'sel-line': 297L,
         'sel-line-start': 10418L,
         'selection_end': 10418L,
         'selection_start': 10418L,
         'zoom': 0L},
        1588218855.96],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [('get_count|0|',
                             2)],
          'code-line': '    _,c = md.create_configuration(N=N,R=R,NT=10000,E'\
                       '=1,L=[1,1,1],D=3)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 75L,
          'selection_end': 124L,
          'selection_start': 124L,
          'zoom': 0L},
         1588218895.411],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_configuration|0|',
                             260)],
          'code-line': "    raise MolecularDynamicsError(f'Failed to create "\
                       "valid configuration for R={R}, density={get_rho(N,R,"\
                       "L)}, within {NT} attempts')\r\n",
          'first-line': 280L,
          'folded-linenos': [],
          'sel-line': 297L,
          'sel-line-start': 10418L,
          'selection_end': 10418L,
          'selection_start': 10418L,
          'zoom': 0L},
         1588218918.552],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [],
          'code-line': 'params = sorted([(N,R,md.get_rho(N,R,[1,1,1])) for N'\
                       ' in [25,50,100] for R in [0.03125, 0.0625]],\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 162L,
          'selection_end': 255L,
          'selection_start': 255L,
          'zoom': 0L},
         1588218940.846],
        [loc('../Anaconda3/Lib/site-packages/numpy/core/_asarray.py'),
         {'attrib-starts': [('asarray|0|',
                             -1)],
          'code-line': '    return array(a, dtype, copy=False, order=order)'\
                       '\n',
          'first-line': 65L,
          'folded-linenos': [],
          'sel-line': 84L,
          'sel-line-start': 2508L,
          'selection_end': 2508L,
          'selection_start': 2508L,
          'zoom': 0L},
         1588218967.663],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [],
          'code-line': 'plt.plot(counts)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 359L,
          'selection_end': 359L,
          'selection_start': 359L,
          'zoom': 0L},
         1588218968.022],
        [loc('../Anaconda3/Lib/site-packages/numpy/core/_asarray.py'),
         {'attrib-starts': [('asarray|0|',
                             16)],
          'code-line': '    return array(a, dtype, copy=False, order=order)'\
                       '\n',
          'first-line': 65L,
          'folded-linenos': [],
          'sel-line': 84L,
          'sel-line-start': 2508L,
          'selection_end': 2508L,
          'selection_start': 2508L,
          'zoom': 0L},
         1588218971.813],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_configuration|0|',
                             260)],
          'code-line': "    raise MolecularDynamicsError(f'Failed to create "\
                       "valid configuration for R={R}, density={get_rho(N,R,"\
                       "L)}, within {NT} attempts')\r\n",
          'first-line': 280L,
          'folded-linenos': [],
          'sel-line': 297L,
          'sel-line-start': 10418L,
          'selection_end': 10418L,
          'selection_start': 10418L,
          'zoom': 0L},
         1588218984.263],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [('get_count|0|',
                             2)],
          'code-line': '    _,c = md.create_configuration(N=N,R=R,NT=10000,E'\
                       '=1,L=[1,1,1],D=3)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 75L,
          'selection_end': 108L,
          'selection_start': 88L,
          'zoom': 0L},
         1588218994.454],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_configuration|0|',
                             260)],
          'code-line': 'def create_configuration(N=100,R=0.0625,NT=25,E=1,L='\
                       '1,D=3):\r\n',
          'first-line': 277L,
          'folded-linenos': [],
          'sel-line': 260L,
          'sel-line-start': 9017L,
          'selection_end': 9041L,
          'selection_start': 9021L,
          'zoom': 0L},
         1588219005.577],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [('get_count|0|',
                             2)],
          'code-line': '    c,_ = md.create_configuration(N=N,R=R,NT=float.i'\
                       'nf,E=1,L=[1,1,1],D=3)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 80L,
          'selection_end': 80L,
          'selection_start': 80L,
          'zoom': 0L},
         1588219299.936],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('create_configuration|0|',
                             260)],
          'code-line': 'def create_configuration(N=100,R=0.0625,NT=25,E=1,L='\
                       '1,D=3):\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 260L,
          'sel-line-start': 9017L,
          'selection_end': 9041L,
          'selection_start': 9021L,
          'zoom': 0L},
         1588219329.513],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [('get_count|0|',
                             2)],
          'code-line': '    c,_ = md.create_configuration(N=N,R=R,NT=float.,'\
                       'E=1,L=[1,1,1],D=3)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 80L,
          'selection_end': 131L,
          'selection_start': 131L,
          'zoom': 0L},
         1588219353.931],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [('HitsWall|0|',
                             137),
                            ('HitsWall|0|.get_collisions|0|',
                             151),
                            ('HitsWall|0|.get_collisions|0|.get_collision|0|',
                             155)],
          'code-line': '                event_plus.t = float.inf      # We c'\
                       'ould return a None and tidy if up, \r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 4903L,
          'selection_end': 4943L,
          'selection_start': 4934L,
          'zoom': 0L},
         1588219405.692],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [('get_count|0|',
                             2)],
          'code-line': '    c,_ = md.create_configuration(N=N,R=R,NT=9999999'\
                       '9999999999999,E=1,L=[1,1,1],D=3)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 80L,
          'selection_end': 145L,
          'selection_start': 145L,
          'zoom': 0L},
         1588219483.507],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '| mol_create.py |7|Companion to mol_dynamics.py: wor'\
                       'k out time taken to initialize using tabula rasa|\r'\
                       '\n',
          'first-line': 25L,
          'folded-linenos': [],
          'sel-line': 43L,
          'sel-line-start': 2561L,
          'selection_end': 2661L,
          'selection_start': 2661L,
          'zoom': 0L},
         1588219575.891],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [],
          'code-line': 'params = sorted([(N,R,md.get_rho(N,R,[1,1,1])) for N'\
                       ' in [25,50,100,130] for R in [0.015625, 0.03125, 0.0'\
                       '625]],\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 168L,
          'selection_end': 238L,
          'selection_start': 238L,
          'zoom': 0L},
         1588220099.242],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [],
          'code-line': '    except MolecularDynamicsError as e:\r\n',
          'first-line': 375L,
          'folded-linenos': [],
          'sel-line': 388L,
          'sel-line-start': 14721L,
          'selection_end': 14760L,
          'selection_start': 14725L,
          'zoom': 0L},
         1588220111.677],
        [loc('simulation/mol_create.py'),
         {'attrib-starts': [('get_count|0|',
                             2)],
          'code-line': '        c,_ = md.create_configuration(N=N,R=R,NT=100'\
                       '0,E=1,L=[1,1,1],D=3)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 4L,
          'sel-line-start': 90L,
          'selection_end': 141L,
          'selection_start': 141L,
          'zoom': 0L},
         1588220402.301],
        [loc('simulation/mol_dynamics.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2020 Greenweaves Software Limited\r'\
                       '\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 684L,
          'selection_start': 0L,
          'zoom': 0L},
         1588220412.987]],
        20),
        'current-loc': loc('simulation/mol_create.py'),
        'editor-state-list': [(loc('simulation/mol_create.py'),
                               {'attrib-starts': [],
                                'code-line': '\r\n',
                                'first-line': 4L,
                                'folded-linenos': [],
                                'sel-line': 14L,
                                'sel-line-start': 686L,
                                'selection_end': 686L,
                                'selection_start': 686L,
                                'zoom': 0L}),
                              (loc('simulation/mol_dynamics.py'),
                               {'attrib-starts': [],
                                'code-line': '# Copyright (C) 2020 Greenweav'\
        'es Software Limited\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 684L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': '| mol_create.py |7|Companion t'\
        'o mol_dynamics.py: work out time taken to initialize using tabula r'\
        'asa|\r\n',
                                'first-line': 25L,
                                'folded-linenos': [],
                                'sel-line': 43L,
                                'sel-line-start': 2561L,
                                'selection_end': 2661L,
                                'selection_start': 2661L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('simulation/mol_create.py'),
         loc('simulation/mol_dynamics.py'),
         loc('README.md')]),
                               'open_files': [u'README.md',
        u'simulation/mol_dynamics.py',
        u'simulation/mol_create.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1588220366.608),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1588219579.76),
                 'user_data': {}},
        'window-alloc': (0,
                         0,
                         1378,
                         749)}]}
guimgr.recent-documents = [loc('simulation/mol_create.py'),
                           loc('simulation/mol_dynamics.py'),
                           loc('README.md')]
guimgr.visual-state = {loc('../../../Anaconda3/Lib/site-packages/scipy/optimize/nonlin.py'): {'a'\
        'ttrib-starts': [('_nonlin_line_search',
                          368),
                         ('_nonlin_line_search.phi',
                          375)],
        'first-line': 367L,
        'folded-linenos': [],
        'sel-line': 380L,
        'sel-line-start': 10733L,
        'selection_end': 10733L,
        'selection_start': 10733L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist',
                          76),
                         ('Artist.set',
                          920)],
        'first-line': 913L,
        'folded-linenos': [],
        'sel-line': 935L,
        'sel-line-start': 29858L,
        'selection_end': 29858L,
        'selection_start': 29858L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_axes.py'): {'a'\
        'ttrib-starts': [('Axes',
                          80),
                         ('Axes.set_title',
                          123)],
        'first-line': 143L,
        'folded-linenos': [],
        'sel-line': 165L,
        'sel-line-start': 5739L,
        'selection_end': 5739L,
        'selection_start': 5739L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_AxesBase',
                          399),
                         ('_AxesBase.set_xlim',
                          2695)],
        'first-line': 2740L,
        'folded-linenos': [],
        'sel-line': 2762L,
        'sel-line-start': 98644L,
        'selection_end': 98644L,
        'selection_start': 98644L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/backends/backend_agg.py'): {'a'\
        'ttrib-starts': [('FigureCanvasAgg',
                          444),
                         ('FigureCanvasAgg.print_png',
                          525)],
        'first-line': 0L,
        'folded-linenos': [535L],
        'sel-line': 531L,
        'sel-line-start': 18638L,
        'selection_end': 18638L,
        'selection_start': 18638L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/cm.py'): {'a'\
        'ttrib-starts': [('ScalarMappable',
                          168),
                         ('ScalarMappable.autoscale_None',
                          326)],
        'first-line': 310L,
        'folded-linenos': [],
        'sel-line': 332L,
        'sel-line-start': 10724L,
        'selection_end': 10724L,
        'selection_start': 10724L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/colors.py'): {'a'\
        'ttrib-starts': [('ColorConverter',
                          242),
                         ('ColorConverter.to_rgba',
                          333)],
        'first-line': 353L,
        'folded-linenos': [],
        'sel-line': 375L,
        'sel-line-start': 13600L,
        'selection_end': 13600L,
        'selection_start': 13600L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_AxesImageBase',
                          62),
                         ('_AxesImageBase.set_data',
                          434)],
        'first-line': 426L,
        'folded-linenos': [],
        'sel-line': 448L,
        'sel-line-start': 15275L,
        'selection_end': 15275L,
        'selection_start': 15275L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/markers.py'): {'a'\
        'ttrib-starts': [('MarkerStyle',
                          96),
                         ('MarkerStyle.set_marker',
                          232)],
        'first-line': 229L,
        'folded-linenos': [],
        'sel-line': 251L,
        'sel-line-start': 8195L,
        'selection_end': 8195L,
        'selection_start': 8195L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/projections/__init__.py'): {'a'\
        'ttrib-starts': [('get_projection_class',
                          53)],
        'first-line': 44L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 1685L,
        'selection_end': 1685L,
        'selection_start': 1685L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/pyplot.py'): {'a'\
        'ttrib-starts': [('savefig',
                          685)],
        'first-line': 674L,
        'folded-linenos': [],
        'sel-line': 687L,
        'sel-line-start': 22240L,
        'selection_end': 22240L,
        'selection_start': 22240L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/texmanager.py'): {'a'\
        'ttrib-starts': [('TexManager',
                          88),
                         ('TexManager.make_dvi',
                          384)],
        'first-line': 399L,
        'folded-linenos': [],
        'sel-line': 421L,
        'sel-line-start': 15446L,
        'selection_end': 15446L,
        'selection_start': 15446L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/lib/function_base.py'): {'a'\
        'ttrib-starts': [('vectorize',
                          1639),
                         ('vectorize._get_ufunc_and_otypes',
                          1812)],
        'first-line': 1830L,
        'folded-linenos': [],
        'sel-line': 1835L,
        'sel-line-start': 59038L,
        'selection_end': 59038L,
        'selection_start': 59038L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/numpy/linalg/linalg.py'): {'a'\
        'ttrib-starts': [('norm',
                          1975)],
        'first-line': 1961L,
        'folded-linenos': [],
        'sel-line': 1975L,
        'sel-line-start': 61503L,
        'selection_end': 61511L,
        'selection_start': 61507L,
        'zoom': 0L},
                       loc('../../../Anaconda3/lib/site-packages/scipy/optimize/minpack.py'): {'a'\
        'ttrib-starts': [('_check_func',
                          23)],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 843L,
        'selection_end': 843L,
        'selection_start': 843L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/argparse.py'): {'attrib-starts': [('_'\
        'ActionsContainer|0|',
        1238),
        ('_ActionsContainer|0|.add_argument|0|',
         1321)],
        'code-line': '        action = action_class(**kwargs)\n',
        'first-line': 1332L,
        'folded-linenos': [],
        'sel-line': 1352L,
        'sel-line-start': 47598L,
        'selection_end': 47598L,
        'selection_start': 47598L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          56),
                         ('Artist|0|.update|0|',
                          924),
                         ('Artist|0|.update|0|._update_property|0|',
                          928)],
        'code-line': '                                         .format(type('\
                     'self).__name__, k))\n',
        'first-line': 933L,
        'folded-linenos': [],
        'sel-line': 952L,
        'sel-line-start': 30148L,
        'selection_end': 30148L,
        'selection_start': 30148L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/site-packages/matplotlib/backends/backend_agg.py'): {'a'\
        'ttrib-starts': [('RendererAgg|0|',
                          60),
                         ('RendererAgg|0|.draw_path|0|',
                          118)],
        'code-line': '                raise OverflowError("Exceeded cell blo'\
                     'ck limit (set "\n',
        'first-line': 127L,
        'folded-linenos': [],
        'sel-line': 147L,
        'sel-line-start': 5298L,
        'selection_end': 5298L,
        'selection_start': 5298L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/site-packages/matplotlib/projections/__init__.py'): {'a'\
        'ttrib-starts': [('get_projection_class|0|',
                          47)],
        'code-line': '        raise ValueError("Unknown projection %r" % pro'\
                     'jection)\n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1461L,
        'selection_end': 1461L,
        'selection_start': 1461L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/site-packages/numpy/_distributor_init.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    from . import _mklinit\n',
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 996L,
        'selection_end': 996L,
        'selection_start': 996L,
        'zoom': 0L},
                       loc('../Anaconda3/Lib/site-packages/numpy/core/_asarray.py'): {'a'\
        'ttrib-starts': [('asarray|0|',
                          16)],
        'code-line': '    return array(a, dtype, copy=False, order=order)\n',
        'first-line': 65L,
        'folded-linenos': [],
        'sel-line': 84L,
        'sel-line-start': 2508L,
        'selection_end': 2508L,
        'selection_start': 2508L,
        'zoom': 0L},
                       loc('../Downloads/_0adeab61ee99baa95652f6fa92645be2_lbmFlowAroundCylinder.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 93L,
        'folded-linenos': [],
        'sel-line': 99L,
        'sel-line-start': 3388L,
        'selection_end': 3388L,
        'selection_start': 3388L,
        'zoom': 0L},
                       loc('../astro/galaxy/make_img.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../astro/make_img.py'): {'attrib-starts': [],
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 776L,
        'selection_end': 776L,
        'selection_start': 776L,
        'zoom': 0L},
                       loc('../astro/plot_points.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../bioinformatics/BA8E.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 686L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '| Wolfram_ca.py    |4| Wolfram Cellular Automaton |\r'\
                     '\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 2653L,
        'selection_end': 2702L,
        'selection_start': 2702L,
        'zoom': 0L},
                       loc('Wolfram_ca.py'): {'attrib-starts': [('step',
        24),
        ('step.index',
         25)],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 887L,
        'selection_end': 889L,
        'selection_start': 889L,
        'zoom': 0L},
                       loc('bacteria.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('barnes_hut.py'): {'attrib-starts': [],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 1177L,
        'selection_end': 1225L,
        'selection_start': 1201L,
        'zoom': 0L},
                       loc('chaos_book/Rossler/CycleStability.py'): {'attrib'\
        '-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/Rossler/Newton.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/Rossler/Poincare.py'): {'attrib-start'\
        's': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/Rossler/Rossler.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/Rossler/RungeKutta.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 32L,
        'selection_start': 32L,
        'zoom': 0L},
                       loc('chaos_book/Rossler/Stability.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw1Rossler/CycleStability.py'): {'att'\
        'rib-starts': [],
        'code-line': 'import numpy as np  # Import NumPy\n',
        'first-line': 72L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw1Rossler/Newton.py'): {'attrib-star'\
        'ts': [],
        'code-line': 'import numpy as np  # Import NumPy\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw1Rossler/Poincare.py'): {'attrib-st'\
        'arts': [],
        'code-line': '    print(rfixed)  #  8.38094142\n',
        'first-line': 163L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 9037L,
        'selection_end': 9069L,
        'selection_start': 9059L,
        'zoom': 0L},
                       loc('chaos_book/hw1Rossler/README.md'): {'attrib-star'\
        'ts': [],
        'code-line': '# Homework for week 1 -- Rossler\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 405L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw1Rossler/Rossler.py'): {'attrib-sta'\
        'rts': [],
        'code-line': '# Q1.4  Integrating Roessler system \n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw1Rossler/Stability.py'): {'attrib-s'\
        'tarts': [],
        'code-line': 'import numpy as np  # Import NumPy\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw2/Bakers map.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019 Greenweaves Software Limited\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 683L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('chaos_book/hw2/floquet.py'): {'attrib-starts': [],
        'code-line': "plt.savefig('floquet.png')\r\n",
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 37L,
        'sel-line-start': 1583L,
        'selection_end': 1608L,
        'selection_start': 1608L,
        'zoom': 0L},
                       loc('duffing.py'): {'attrib-starts': [('duffing|0|',
        22)],
        'code-line': 'def duffing(y):\r\n',
        'first-line': 31L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 943L,
        'selection_end': 958L,
        'selection_start': 958L,
        'zoom': 0L},
                       loc('ex2_integrator.py'): {'attrib-starts': [],
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('ex3_LotkaVolterra.py'): {'attrib-starts': [],
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 179L,
        'sel-line-start': 5390L,
        'selection_end': 5412L,
        'selection_start': 5412L,
        'zoom': 0L},
                       loc('henon.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019 Greenweaves Software Limited\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 683L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('lbmFlowAroundCylinder.py'): {'attrib-starts': [('v'\
        'isualize_velocity',
        122)],
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 137L,
        'sel-line-start': 4723L,
        'selection_end': 4731L,
        'selection_start': 4731L,
        'zoom': 0L},
                       loc('lorentz.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2219L,
        'selection_end': 2246L,
        'selection_start': 2246L,
        'zoom': 0L},
                       loc('lorenz.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017 Greenweaves Software Pty Ltd\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 684L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mauro.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 87L,
        'sel-line-start': 3171L,
        'selection_end': 3236L,
        'selection_start': 3179L,
        'zoom': 0L},
                       loc('ode-test.py'): {'attrib-starts': [],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 645L,
        'selection_end': 667L,
        'selection_start': 645L,
        'zoom': 0L},
                       loc('parityRule.py'): {'attrib-starts': [],
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1755L,
        'selection_end': 1756L,
        'selection_start': 1756L,
        'zoom': 0L},
                       loc('parityRuleSolution.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 240L,
        'selection_end': 264L,
        'selection_start': 264L,
        'zoom': 0L},
                       loc('phase.py'): {'attrib-starts': [('generate|0|',
        114)],
        'code-line': 'def generate(f=lambda x,y:(x,y),nx=64, ny = 64,xmin=-1'\
                     '0,xmax=10,ymin=-10,ymax=10):\r\n',
        'first-line': 177L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 4031L,
        'selection_end': 4077L,
        'selection_start': 4062L,
        'zoom': 0L},
                       loc('rk4.py'): {'attrib-starts': [('rk4|0|',
        17)],
                                       'code-line': '    return tuple([yy+(_'\
        'k0+2*_k1+2*_k2+_k3)/6 for yy,_k0,_k1,_k2,_k3 in zip(y,k0,k1,k2,k3)]'\
        ')\r\n',
                                       'first-line': 13L,
                                       'folded-linenos': [],
                                       'sel-line': 30L,
                                       'sel-line-start': 1194L,
                                       'selection_end': 1218L,
                                       'selection_start': 1216L,
                                       'zoom': 0L},
                       loc('rki.py'): {'attrib-starts': [('Driver',
        17)],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 17L,
                                       'sel-line-start': 707L,
                                       'selection_end': 719L,
                                       'selection_start': 713L,
                                       'zoom': 0L},
                       loc('roessler.py'): {'attrib-starts': [],
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1267L,
        'selection_end': 1290L,
        'selection_start': 1284L,
        'zoom': 0L},
                       loc('simulation/bacteria.py'): {'attrib-starts': [],
        'code-line': 'from __future__ import print_function, division #compa'\
                     'tibility py2 - py3\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('simulation/mol_create.py'): {'attrib-starts': [],
        'code-line': 'plt.plot(counts)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 359L,
        'selection_end': 359L,
        'selection_start': 359L,
        'zoom': 0L},
                       loc('simulation/mol_dynamics.py'): {'attrib-starts': [('C'\
        'ollision|0|',
        180),
        ('Collision|0|.act|0|',
         231)],
        'code-line': '        delta_x_norm        = math.sqrt(sum(delta_x[k]'\
                     '**2 for k in range(len(particle_i.position))))\r\n',
        'first-line': 220L,
        'folded-linenos': [],
        'sel-line': 237L,
        'sel-line-start': 8083L,
        'selection_end': 8180L,
        'selection_start': 8180L,
        'zoom': 0L},
                       loc('simulation/spheres.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('simulation/trafficLights.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/python\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('strogatz/6-3-10.png'): {'attrib-starts': [],
        'code-line': '\xc2\x89PNG\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('strogatz/README.md'): {'attrib-starts': [],
        'code-line': '# Dynamics\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 727L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('strogatz/example_8_7_1.py'): {'attrib-starts': [],
        'code-line': "    plot(start=(2,0),color='r')\r\n",
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1238L,
        'selection_end': 1269L,
        'selection_start': 1242L,
        'zoom': 0L},
                       loc('strogatz/exercise_10_6_1.py'): {'attrib-starts': [],
        'code-line': 'import matplotlib.pyplot as plt\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('strogatz/exercise_3_7_6.py'): {'attrib-starts': [],
        'code-line': "colours = ['r','g','b','c','m','y']\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 123L,
        'selection_end': 157L,
        'selection_start': 157L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_1.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017-2019 Greenweaves Software Limited'\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 689L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_2.py'): {'attrib-starts': [],
        'code-line': "sys.path.append('../')\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 782L,
        'selection_end': 804L,
        'selection_start': 782L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_3.py'): {'attrib-starts': [],
        'code-line': 'X,Y,U,V,fixed=phase.generate(f=f,nx=256, ny = 256,xmin'\
                     '=-100,xmax=100,ymin=-100,ymax=100)\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 1180L,
        'selection_end': 1195L,
        'selection_start': 1195L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_3_10.py'): {'attrib-starts': [],
        'code-line': 'phase.plot_stability(f=f,fixed_points=fixed_points,R=0'\
                     '.05,Limit=10.0,step=0.1,S=50,N=5000,K=100)\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1092L,
        'selection_end': 1188L,
        'selection_start': 1092L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_4_4.py'): {'attrib-starts': [],
        'code-line': '    phase.plot_stability(f=f,fixed_points=fixed_points'\
                     ',Limit=5,step=0.1,N=5000,accept=phase.right_upper_quad'\
                     'rant,K=10)\r\n',
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1296L,
        'selection_end': 1414L,
        'selection_start': 1300L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_4_8.py'): {'attrib-starts': [],
        'code-line': 'phase.plot_stability(f=lambda x,y:f(x,y,a,b,c),fixed_p'\
                     'oints=fixed_points,Limit=5,step=0.1,N=5000,\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1305L,
        'selection_end': 1470L,
        'selection_start': 1305L,
        'zoom': 0L},
                       loc('strogatz/exercise_6_5_19.py'): {'attrib-starts': [],
        'code-line': '# This software is distributed in the hope that it wil'\
                     'l be useful,\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 299L,
        'selection_end': 322L,
        'selection_start': 322L,
        'zoom': 0L},
                       loc('strogatz/strogatz_6_1.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2017 Greenweaves Software Pty Ltd\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('strogatz_10_6_1.py'): {'attrib-starts': [],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 39L,
        'sel-line-start': 1076L,
        'selection_end': 1101L,
        'selection_start': 1101L,
        'zoom': 0L},
                       loc('strogatz_6_1.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 718L,
        'selection_end': 735L,
        'selection_start': 735L,
        'zoom': 0L},
                       loc('strogatz_6_1_1.py'): {'attrib-starts': [],
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 1584L,
        'selection_end': 1614L,
        'selection_start': 1584L,
        'zoom': 0L},
                       loc('strogatz_6_2.py'): {'attrib-starts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 718L,
        'selection_end': 734L,
        'selection_start': 734L,
        'zoom': 0L},
                       loc('strogatz_6_3.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 718L,
        'selection_end': 734L,
        'selection_start': 734L,
        'zoom': 0L},
                       loc('strogatz_6_4.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 718L,
        'selection_end': 735L,
        'selection_start': 735L,
        'zoom': 0L},
                       loc('strogatz_6_5_19.py'): {'attrib-starts': [],
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 718L,
        'selection_end': 735L,
        'selection_start': 735L,
        'zoom': 0L},
                       loc('strogatz_6_6_1.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('test.py'): {'attrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 380L,
        'selection_end': 417L,
        'selection_start': 380L,
        'zoom': 0L},
                       loc('trafficLights.py'): {'attrib-starts': [],
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 127L,
        'sel-line-start': 3401L,
        'selection_end': 3420L,
        'selection_start': 3420L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'C:\\Users\\Simon\\Anaconda3\\Scripts\\wrap_anaconda.bat')}
search.replace-history = [u'D',
                          u'return',
                          u'args_L',
                          u'args.L',
                          u'product']
search.search-history = [u'3',
                         u'set_position',
                         u' L = ',
                         u'args.L',
                         u'configuration',
                         u'phase',
                         u'COMPL',
                         u'comple',
                         u'press',
                         u'save']
